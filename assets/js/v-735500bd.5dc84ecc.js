"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[917],{1794:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-735500bd",path:"/docs/css/css.html",title:"CSS",lang:"en-US",frontmatter:{categories:["css"]},excerpt:"",headers:[{level:2,title:"元素分类",slug:"元素分类",children:[{level:3,title:"块级元素",slug:"块级元素",children:[]},{level:3,title:"行内元素",slug:"行内元素",children:[]},{level:3,title:"行内块元素",slug:"行内块元素",children:[]}]},{level:2,title:"font的复合属性写法",slug:"font的复合属性写法",children:[]},{level:2,title:"text文本样式",slug:"text文本样式",children:[]},{level:2,title:"伪类选择器",slug:"伪类选择器",children:[]},{level:2,title:"a标签的常用写法",slug:"a标签的常用写法",children:[]},{level:2,title:"设置背景",slug:"设置背景",children:[{level:3,title:"background-image",slug:"background-image",children:[]},{level:3,title:"background-position",slug:"background-position",children:[]},{level:3,title:"background-attachment",slug:"background-attachment",children:[]},{level:3,title:"background复合写法",slug:"background复合写法",children:[]}]},{level:2,title:"行高的继承性",slug:"行高的继承性",children:[]},{level:2,title:"内边距padding(margin)",slug:"内边距padding-margin",children:[]},{level:2,title:"块级盒子水平居中",slug:"块级盒子水平居中",children:[]},{level:2,title:"行内元素(行内块元素)水平居中",slug:"行内元素-行内块元素-水平居中",children:[]},{level:2,title:"嵌套块元素塌陷(外边距合并)",slug:"嵌套块元素塌陷-外边距合并",children:[]},{level:2,title:"浮动",slug:"浮动",children:[{level:3,title:"清除浮动(用于父盒子没有高度的情况)",slug:"清除浮动-用于父盒子没有高度的情况",children:[]}]},{level:2,title:"定位",slug:"定位",children:[{level:3,title:"相对定位",slug:"相对定位",children:[]},{level:3,title:"绝对定位",slug:"绝对定位",children:[]},{level:3,title:"固定定位",slug:"固定定位",children:[]},{level:3,title:"绝对定位和固定定位要居中的方法",slug:"绝对定位和固定定位要居中的方法",children:[]},{level:3,title:"绝对定位和固定定位也和浮动类似",slug:"绝对定位和固定定位也和浮动类似",children:[]},{level:3,title:"注意事项",slug:"注意事项",children:[]},{level:3,title:"z-index",slug:"z-index",children:[]},{level:3,title:"CSS画三角形和梯形",slug:"css画三角形和梯形",children:[]}]},{level:2,title:"flex布局",slug:"flex布局",children:[{level:3,title:"父项flex属性",slug:"父项flex属性",children:[]},{level:3,title:"子项flex属性",slug:"子项flex属性",children:[]}]},{level:2,title:"设置超出部分省略号",slug:"设置超出部分省略号",children:[]}],git:{createdTime:1646061276e3,updatedTime:1646061276e3,contributors:[{name:"dxlxxx",email:"1271704084@qq.com",commits:1}]},filePathRelative:"docs/css/css.md"}},1696:(n,a,s)=>{s.r(a),s.d(a,{default:()=>t});const e=(0,s(6252).uE)('<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h1><h2 id="元素分类" tabindex="-1"><a class="header-anchor" href="#元素分类" aria-hidden="true">#</a> 元素分类</h2><h3 id="块级元素" tabindex="-1"><a class="header-anchor" href="#块级元素" aria-hidden="true">#</a> 块级元素</h3><blockquote><p>div、p、ol、ul、dl、form、h1~h6、menu、table</p></blockquote><ol><li>无论宽度独占一行</li><li>可以设置高度，宽度，内外边距</li><li>默认宽度和父级一样宽</li><li>是一个盒子,里面可以放块级和行内元素</li><li><strong>放文字的块级元素不能放块级元素如：(<code>&lt;p&gt;&lt;/p&gt;</code>, <code>&lt;h1&gt;&lt;/h1&gt;</code>)</strong></li></ol><h3 id="行内元素" tabindex="-1"><a class="header-anchor" href="#行内元素" aria-hidden="true">#</a> 行内元素</h3><blockquote><p>a、b、em、i、img、input、label、span、textarea</p></blockquote><ol><li>行内元素不能设置高度和宽度</li><li>行内元素的高度和宽度就是他<strong>内容本身</strong>的宽度和高度</li><li>行内元素<strong>只能容纳行内元素和文字</strong></li><li><strong><code>&lt;a&gt;&lt;/a&gt;</code>里面不能放<code>&lt;a&gt;&lt;/a&gt;</code>，但是能放块级元素</strong></li></ol><h3 id="行内块元素" tabindex="-1"><a class="header-anchor" href="#行内块元素" aria-hidden="true">#</a> 行内块元素</h3><p>具有行内元素和块级元素的特点</p><ol><li>可以设置高度和宽度</li><li>一行可以显示多个**（多个标签之间有空格）**</li><li>默认宽度是本身内容的宽度</li></ol><h2 id="font的复合属性写法" tabindex="-1"><a class="header-anchor" href="#font的复合属性写法" aria-hidden="true">#</a> font的复合属性写法</h2><p><code>font: initial 400 25px &#39;微软雅黑&#39;;</code><strong>必须按照 font-style font-weight font-size font-family的顺序写，font-size font-family是必备的</strong></p><h2 id="text文本样式" tabindex="-1"><a class="header-anchor" href="#text文本样式" aria-hidden="true">#</a> text文本样式</h2><p>添加下划线 <code>text-decoration: underline;</code> 去掉下划线（a标签） <code>text-decoration: none;</code> 首行缩进（em单位是一个字符） <code>text-indent: 2em;</code></p><h2 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* 未访问的链接 a:link  */</span>\n<span class="token selector">a:link</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* 访问过的链接 a:visited  */</span>\n<span class="token selector">a:visited</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* 鼠标经过的链接 a:hover  */</span>\n<span class="token selector">a:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* 处于活跃的链接 a:active (按下未弹起)  */</span>\n<span class="token selector">a:active</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* 处于焦点时input:focus */</span>\n<span class="token selector">input:focus</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>必须按照上面的<strong>顺序</strong></p><h2 id="a标签的常用写法" tabindex="-1"><a class="header-anchor" href="#a标签的常用写法" aria-hidden="true">#</a> a标签的常用写法</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">a</span> <span class="token punctuation">{</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">a:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="设置背景" tabindex="-1"><a class="header-anchor" href="#设置背景" aria-hidden="true">#</a> 设置背景</h2><h3 id="background-image" tabindex="-1"><a class="header-anchor" href="#background-image" aria-hidden="true">#</a> background-image</h3><p>多用于小图片和特大图片，方便调位置</p><h3 id="background-position" tabindex="-1"><a class="header-anchor" href="#background-position" aria-hidden="true">#</a> background-position</h3><ol><li>参数可以为方位名词，不讲究顺序(center, left)</li><li>参数可以是具体位置(20px, 10px)先x后y</li><li>参数可以是混合单位(center, 40px)先x后y, 王者荣耀官网背景图片做法</li></ol><h3 id="background-attachment" tabindex="-1"><a class="header-anchor" href="#background-attachment" aria-hidden="true">#</a> background-attachment</h3><p>1.scroll跟随滚动 2.fixed固定</p><h3 id="background复合写法" tabindex="-1"><a class="header-anchor" href="#background复合写法" aria-hidden="true">#</a> background复合写法</h3><p>无固定位置一般为color, url, repeat, position</p><h2 id="行高的继承性" tabindex="-1"><a class="header-anchor" href="#行高的继承性" aria-hidden="true">#</a> 行高的继承性</h2><p>如果父元素指定了行高没带单位(1.5)那么它的子元素的行高就是子元素文字大小的1.5倍</p><h2 id="内边距padding-margin" tabindex="-1"><a class="header-anchor" href="#内边距padding-margin" aria-hidden="true">#</a> 内边距padding(margin)</h2><p>特别注意跟3个值是<strong>上 左右 下</strong>， 跟4个值是 <strong>上 右 下 左 (顺时针)</strong></p><h2 id="块级盒子水平居中" tabindex="-1"><a class="header-anchor" href="#块级盒子水平居中" aria-hidden="true">#</a> 块级盒子水平居中</h2><p><code>margin: 0, auto</code><strong>块级盒子必须要有宽度</strong></p><h2 id="行内元素-行内块元素-水平居中" tabindex="-1"><a class="header-anchor" href="#行内元素-行内块元素-水平居中" aria-hidden="true">#</a> 行内元素(行内块元素)水平居中</h2><p>给<strong>父级元素</strong>设置<code>text-align: center;</code></p><h2 id="嵌套块元素塌陷-外边距合并" tabindex="-1"><a class="header-anchor" href="#嵌套块元素塌陷-外边距合并" aria-hidden="true">#</a> 嵌套块元素塌陷(外边距合并)</h2><p>对于两个嵌套关系的块元素，父元素有上边距同时子元素也有上边距，此时父元素会塌陷<strong>较大</strong>的外边距值。</p><ol><li>可以为父元素定义上边距</li><li>可以为父元素定义上内边距</li><li>可以为父元素添加<code>overflow: hidden;</code></li></ol><p>当外边距塌陷时，外边距之间的计算方式是怎样的？</p><ol><li>两个都是正数，取<strong>较大</strong>的值</li><li>两个都是负数，取绝对值较大的值</li><li>一正一负，取两个值得和</li></ol><h2 id="浮动" tabindex="-1"><a class="header-anchor" href="#浮动" aria-hidden="true">#</a> 浮动</h2><p><code>float: right/left</code></p><ol><li><p>脱离标准流(脱标)</p></li><li><p>浮动的盒子不再保留原先的位置</p></li><li><p>任何元素都能进行浮动，浮动后具有<strong>行内块</strong>元素的特征</p><ul><li>如果块级盒子没有设置宽度，默认宽度和父级一样宽，但浮动后大小根据内容来决定</li><li>和行内块不同，<strong>浮动元素间没有缝隙</strong></li></ul></li></ol><p><strong>浮动只影响后面的标准流</strong></p><h3 id="清除浮动-用于父盒子没有高度的情况" tabindex="-1"><a class="header-anchor" href="#清除浮动-用于父盒子没有高度的情况" aria-hidden="true">#</a> 清除浮动(用于父盒子没有高度的情况)</h3><p>由于父级盒子很多情况下，不方便给高度，但是，子盒子浮动又不占有位置，最后父级盒子高度为0时，就会影响下面的标准流盒子。</p><ol><li>隔墙法 给最后一个浮动的元素添加一个块级元素，设置它的属性<code>clear: both;</code>(不常用)</li><li>overflow 给父盒子添加属性<code>overflow: hidden</code></li><li>伪元素(单伪元素，双伪元素before，after) 给父盒子添加</li></ol><h2 id="定位" tabindex="-1"><a class="header-anchor" href="#定位" aria-hidden="true">#</a> 定位</h2><h3 id="相对定位" tabindex="-1"><a class="header-anchor" href="#相对定位" aria-hidden="true">#</a> 相对定位</h3><p><code>position: relative </code></p><ol><li>移动位置参考点是 自己原来的位置(不脱标)</li><li>不脱标，<strong>继续保留原来的位置</strong></li><li>最典型的应用是<strong>给绝对定位当爹</strong></li></ol><h3 id="绝对定位" tabindex="-1"><a class="header-anchor" href="#绝对定位" aria-hidden="true">#</a> 绝对定位</h3><p><code>position: absolute</code></p><ol><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位</li><li>如果祖先元素有定位(相对，绝对，固定定位)，则以最近一级的有定位祖先元素为参考点移动位置</li><li>绝对定位会脱标</li></ol><h4 id="子绝父相" tabindex="-1"><a class="header-anchor" href="#子绝父相" aria-hidden="true">#</a> 子绝父相</h4><p>因为父级需要占用位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位</p><h3 id="固定定位" tabindex="-1"><a class="header-anchor" href="#固定定位" aria-hidden="true">#</a> 固定定位</h3><p>position:fixed;</p><ol><li><p>以浏览器可视窗口为参照点移动元素</p><ul><li>跟父元素没有任何关系</li><li>不随滚动条滚动</li></ul></li><li><p>固定定位<strong>不占有原先的位置</strong> 固定定位也是脱标的，是一种特殊的绝对定位 特殊用法：固定在版心的右侧</p><ol><li>让固定盒子<code>left: 50%</code>版心中间。</li><li>再用<code>margin-left:版心宽度的一半距离</code>。多走版心宽度的一半位置就可以让固定盒子贴着版心右侧对齐了</li></ol></li></ol><h3 id="绝对定位和固定定位要居中的方法" tabindex="-1"><a class="header-anchor" href="#绝对定位和固定定位要居中的方法" aria-hidden="true">#</a> 绝对定位和固定定位要居中的方法</h3><ol><li>让固定盒子<code>left: 50%</code>版心中间。</li><li>再用<code>margin-left: 负的盒子宽度的一半距离</code>。少走盒子宽度的一半位置就可以让盒子居中对齐了</li></ol><h3 id="绝对定位和固定定位也和浮动类似" tabindex="-1"><a class="header-anchor" href="#绝对定位和固定定位也和浮动类似" aria-hidden="true">#</a> 绝对定位和固定定位也和浮动类似</h3><ol><li>行内元素添加绝对定位或者固定定位，可以直接设置高度和宽度</li><li>块级元素添加绝对定位或者固定定位，如果不给宽度或者高度，默认大小是内容的大小</li></ol><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ol><li>浮动只会压住标准流的盒子，不会压住标准流盒子里的文字</li><li>定位会</li></ol><h3 id="z-index" tabindex="-1"><a class="header-anchor" href="#z-index" aria-hidden="true">#</a> z-index</h3><p>设置盒子的z轴，<strong>不带单位</strong></p><p><strong>只有定位的盒子有这个属性</strong></p><h3 id="css画三角形和梯形" tabindex="-1"><a class="header-anchor" href="#css画三角形和梯形" aria-hidden="true">#</a> CSS画三角形和梯形</h3><ol><li>三角形</li></ol><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token property">border</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>\n<span class="token property">border-bottom-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li><p>梯形</p><ol><li>先画直角三角形</li></ol><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token property">border</span><span class="token punctuation">:</span> 50px solid transparent<span class="token punctuation">;</span>\n<span class="token property">border-bottom</span><span class="token punctuation">:</span> 0 \n<span class="token property">border-right-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>把直角三角形定位到矩形旁边</li></ol><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n<span class="token property">left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h2 id="flex布局" tabindex="-1"><a class="header-anchor" href="#flex布局" aria-hidden="true">#</a> flex布局</h2><h3 id="父项flex属性" tabindex="-1"><a class="header-anchor" href="#父项flex属性" aria-hidden="true">#</a> 父项flex属性</h3><h4 id="flex-direction" tabindex="-1"><a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a> flex-direction</h4><p>设置主轴的方向</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span> <span class="token comment">/*默认x*/</span>\n<span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span> <span class="token comment">/*设置y*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content" aria-hidden="true">#</a> justify-content</h4><p>设置主轴上的子元素排列方式</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token comment">/*居中*/</span>\n<span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span> <span class="token comment">/*居左*/</span>\n<span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span> <span class="token comment">/*居右*/</span>\n<span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span><span class="token comment">/*平均分配剩余空间*/</span>\n<span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span><span class="token comment">/*第一个和最后一个居左和居右，其余分配剩余空间*/</span> 重点\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a> flex-wrap</h4><p>flex布局默认是不换行的，如果装不下会缩小子盒子的大小</p><p>设置子元素换行</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="align-content" tabindex="-1"><a class="header-anchor" href="#align-content" aria-hidden="true">#</a> align-content</h4><p>设置侧轴上的子元素排列方式（多行）</p><p>属性和justify-content完全一样，多个stretch（拉伸高度，不能设置高度）</p><h4 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items" aria-hidden="true">#</a> align-items</h4><p>设置侧轴上的子元素排列方式（单行）</p><p>子元素只有一行</p><p>属性和justify-content差不多,没有space-around和space-between，多个stretch（拉伸高度，不能设置高度）</p><h4 id="flex-flow" tabindex="-1"><a class="header-anchor" href="#flex-flow" aria-hidden="true">#</a> flex-flow</h4><p>flex-direction，flex-wrap的复合属性</p><h3 id="子项flex属性" tabindex="-1"><a class="header-anchor" href="#子项flex属性" aria-hidden="true">#</a> 子项flex属性</h3><h4 id="flex属性" tabindex="-1"><a class="header-anchor" href="#flex属性" aria-hidden="true">#</a> flex属性</h4><p>控制子项占的份数</p><p><strong>只会占用剩余空间</strong></p><h4 id="align-self" tabindex="-1"><a class="header-anchor" href="#align-self" aria-hidden="true">#</a> align-self</h4><p>单独设置子项的侧轴样式</p><h4 id="order" tabindex="-1"><a class="header-anchor" href="#order" aria-hidden="true">#</a> order</h4><p>数值越小，排列顺序越靠前，默认是0</p><h2 id="设置超出部分省略号" tabindex="-1"><a class="header-anchor" href="#设置超出部分省略号" aria-hidden="true">#</a> 设置超出部分省略号</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code> <span class="token selector">span</span> <span class="token punctuation">{</span>\n      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n      <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n      <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n      <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',105),l={},t=(0,s(3744).Z)(l,[["render",function(n,a){return e}]])}}]);