"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[499],{5848:(n,a,e)=>{e.r(a),e.d(a,{data:()=>s});const s={key:"v-a14a3628",path:"/docs/other/%E7%A7%91%E8%93%9D%E9%9D%A2%E8%AF%95%E9%A2%98.html",title:"科蓝面试题",lang:"en-US",frontmatter:{categories:["other"]},excerpt:"",headers:[{level:2,title:"组件的递归调用",slug:"组件的递归调用",children:[]},{level:2,title:"Vue-router meta",slug:"vue-router-meta",children:[]}],git:{createdTime:null,updatedTime:null,contributors:[]},filePathRelative:"docs/other/科蓝面试题.md"}},9759:(n,a,e)=>{e.r(a),e.d(a,{default:()=>l});var s=e(6252),t=e(3577);const o=(0,s.uE)('<h1 id="科蓝面试题" tabindex="-1"><a class="header-anchor" href="#科蓝面试题" aria-hidden="true">#</a> 科蓝面试题</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">null</span><span class="token operator">==</span><span class="token keyword">undefined</span>  <span class="token comment">// 返回true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>null和undefined不等于false也不等于true</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回函数的引用 function Array() { [native code] }</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 结果是object</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在<code>JavaScript</code>里使用<code>typeof</code>判断数据类型，只能区分<strong>基本类型</strong>，即：<code>number</code>、<code>string</code>、<code>undefined</code>、<code>boolean</code>、<code>function</code>、<code>object</code>。 对于<code>null</code>、<code>array</code>、<code>object</code>来说，使用<code>typeof</code>都会统一返回<code>object</code>字符串。在JS中，可以通过<code>Object.prototype.toString</code>方法，判断某个对象之属于哪种内置类型。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出结果 [object Boolean]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="组件的递归调用" tabindex="-1"><a class="header-anchor" href="#组件的递归调用" aria-hidden="true">#</a> 组件的递归调用</h2>',7),c=(0,s._)("h2",{id:"vue-router-meta",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#vue-router-meta","aria-hidden":"true"},"#"),(0,s.Uk)(" Vue-router meta")],-1),p={},l=(0,e(3744).Z)(p,[["render",function(n,a){return(0,s.wg)(),(0,s.iD)(s.HY,null,[o,(0,s._)("p",null,"插值绑定不能写**"+(0,t.zw)()+"里面只能写表达式（三目运算符也是表达式），而不能写语句和流程控制**",1),c],64)}]])}}]);