"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[883],{1983:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-e0073d0a",path:"/docs/other/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0.html",title:"项目笔记",lang:"en-US",frontmatter:{categories:["other"]},excerpt:"",headers:[{level:2,title:"登录",slug:"登录",children:[{level:3,title:"记录登录信息的方式",slug:"记录登录信息的方式",children:[]},{level:3,title:"flax布局",slug:"flax布局",children:[]},{level:3,title:"transform平移",slug:"transform平移",children:[]},{level:3,title:"token存放的位置",slug:"token存放的位置",children:[]},{level:3,title:"防止通过url直接跳转到home",slug:"防止通过url直接跳转到home",children:[]},{level:3,title:"vue-router",slug:"vue-router",children:[]}]},{level:2,title:"Git命令",slug:"git命令",children:[{level:3,title:"拉取（已有仓库）",slug:"拉取-已有仓库",children:[]},{level:3,title:"push",slug:"push",children:[]}]}],git:{createdTime:1646061276e3,updatedTime:1646061276e3,contributors:[{name:"dxlxxx",email:"1271704084@qq.com",commits:1}]},filePathRelative:"docs/other/项目笔记.md"}},7845:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="项目笔记" tabindex="-1"><a class="header-anchor" href="#项目笔记" aria-hidden="true">#</a> 项目笔记</h1><h2 id="登录" tabindex="-1"><a class="header-anchor" href="#登录" aria-hidden="true">#</a> 登录</h2><h3 id="记录登录信息的方式" tabindex="-1"><a class="header-anchor" href="#记录登录信息的方式" aria-hidden="true">#</a> 记录登录信息的方式</h3><ol><li>cookie</li><li>session</li><li>token</li></ol><p>前两个多用与不跨域的请求，跨域请求用token</p><h3 id="flax布局" tabindex="-1"><a class="header-anchor" href="#flax布局" aria-hidden="true">#</a> flax布局</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span> <span class="token comment">/*flax布局居右*/</span>\n<span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span> <span class="token comment">/* 均匀排列每个元素首个元素放置于起点，末尾元素放置于终点 */</span>\n<span class="token property">align-items</span><span class="token punctuation">:</span> center\n<span class="token comment">/*align-items 属性定义flex子项在flex容器的当前行的侧轴（纵轴）方向上的对齐方式。*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="transform平移" tabindex="-1"><a class="header-anchor" href="#transform平移" aria-hidden="true">#</a> transform平移</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="token存放的位置" tabindex="-1"><a class="header-anchor" href="#token存放的位置" aria-hidden="true">#</a> token存放的位置</h3><p>将token存放在sessionstorge中，因为sessionStorage和localStorage不同，只在网站打开时生效</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 保存token</span>\nwindow<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="防止通过url直接跳转到home" tabindex="-1"><a class="header-anchor" href="#防止通过url直接跳转到home" aria-hidden="true">#</a> 防止通过url直接跳转到home</h3><p>使用路由导航守卫控制访问权限</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 跳转login直接放行</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token comment">// 读取token值</span>\n  <span class="token keyword">const</span> tokenStr <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">// 跳转其他页判断token值 不存在直接跳转登录页</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tokenStr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>\n  <span class="token comment">// 存在放行</span>\n  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="vue-router" tabindex="-1"><a class="header-anchor" href="#vue-router" aria-hidden="true">#</a> vue-router</h3><p>子路由，子路由的内容会显示在父路由的组件的<code>router-view</code>里面</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">component</span><span class="token operator">:</span> Home<span class="token punctuation">,</span>\n  <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/home/welcome&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;welcome&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">component</span><span class="token operator">:</span> Welcome\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>添加children选项，值是个数组</p><p><strong>子路由的路径不需要带/，带/代表根路径，就不会接上home路径了，从定向时需要带上</strong>/home</p><h2 id="git命令" tabindex="-1"><a class="header-anchor" href="#git命令" aria-hidden="true">#</a> Git命令</h2><h3 id="拉取-已有仓库" tabindex="-1"><a class="header-anchor" href="#拉取-已有仓库" aria-hidden="true">#</a> 拉取（已有仓库）</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git remote add origin https://gitee.com/dxlxxx/vue_shop.git\ngit push -u origin master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="push" tabindex="-1"><a class="header-anchor" href="#push" aria-hidden="true">#</a> push</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git clone\ngit status // 查看状态\ngit add.\ngit commit -m [message]\ngit branch // 查看本地分支\ngit checkout -b [name] // 创建本地分支, 并切换分支\ngit checkout [name] //切换分支\ngit push -u origin [name] // 创建远程分支，并推送到远程分支\ngit checkout master // 切换到主分支\ngit merge [name] // 将name合并到主分支\ngit push  // 推送到主分支\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',25),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])}}]);